{"version":3,"sources":["context/github/githubContext.js","context/alert/alertContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Navbar.js","components/Alert.js","context/github/githubReducer.js","context/types.js","context/github/GithubState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","serviceWorker.js","index.js"],"names":["GithubContext","createContext","AlertContext","Search","useState","value","setValue","github","useContext","alert","className","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","type","placeholder","Card","user","src","avatar_url","alt","login","to","Home","users","loading","Fragment","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getRepos","getUser","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","listStyle","margin","Navbar","exact","Alert","role","text","onClick","aria-label","aria-hidden","handlers","state","payload","githubReducer","action","DEFAULT","GithubState","children","useReducer","dispatch","a","setLoading","axios","get","response","data","items","Provider","alertReducer","AlertState","App","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e9f10c8.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const GithubContext = createContext();\n","import { createContext } from 'react';\n\nexport const AlertContext = createContext();\n","import React, { useContext, useState } from 'react';\nimport { GithubContext } from '../context/github/githubContext';\nimport { AlertContext } from '../context/alert/alertContext';\n\nexport const Search = () => {\n  const [value, setValue] = useState('');\n  const github = useContext(GithubContext);\n  const alert = useContext(AlertContext);\n\n  const onSubmit = (event) => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    github.clearUsers();\n\n    if (value.trim()) {\n      alert.hide();\n      github.search(value.trim());\n    } else {\n      alert.show('Введите данные пользователя!');\n    }\n  };\n\n  return (\n    <div className='form-group'>\n      <input\n        className='form-control'\n        onChange={(event) => setValue(event.target.value)}\n        onKeyPress={onSubmit}\n        type='text'\n        value={value}\n        placeholder='Введите ник пользователя...'\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Card = ({ user }) => (\n  <div className='card'>\n    <img className='card-img-top' src={user.avatar_url} alt={user.login} />\n    <div className='card-body'>\n      <h5 className='card-title'>{user.login}</h5>\n      <Link\n        className='btn btn-primary'\n        to={'/github-app-vm-react/profile/' + user.login}\n      >\n        Открыть\n      </Link>\n    </div>\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Search } from '../components/Search';\nimport { Card } from '../components/Card';\nimport { GithubContext } from '../context/github/githubContext';\n\nexport const Home = () => {\n  const { users, loading } = useContext(GithubContext);\n\n  return (\n    <React.Fragment>\n      <Search />\n      <div className='row'>\n        {loading ? (\n          <p className='text-center'>Загрузка...</p>\n        ) : (\n          users.map((user) => (\n            <div className='col-sm-4 mb-4' key={user.id}>\n              <Card user={user} />\n            </div>\n          ))\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nexport const About = () => {\n  return (\n    <div className='jumbotron'>\n      <div className='container'>\n        <h1 className='display-4'>Информация</h1>\n        <p className='lead'>\n          Версия приложения: <strong>1.0.0</strong>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Repos = ({ repos }) => (\n  <React.Fragment>\n    {repos.map((repo) => (\n      <div className='card mb-3' key={repo.id}>\n        <div className='card-body'>\n          <h5>\n            <a href={repo.html_url} rel='noopener noreferrer' target='_blank'>\n              {repo.name}\n            </a>\n          </h5>\n        </div>\n      </div>\n    ))}\n  </React.Fragment>\n);\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Repos } from '../components/Repos';\nimport { GithubContext } from '../context/github/githubContext';\n\nexport const Profile = ({ match }) => {\n  const { getRepos, getUser, user, repos, loading } = useContext(GithubContext);\n  const urlName = match.params.name;\n\n  useEffect(() => {\n    getRepos(urlName);\n    getUser(urlName);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <p className='text-center'>Загрузка...</p>;\n  }\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n  } = user;\n\n  return (\n    <React.Fragment>\n      <Link to='/github-app-vm-react/' className='btn btn-link'>\n        На главную\n      </Link>\n      <div className='card mb-4'>\n        <div className='card-body'>\n          <div className='row'>\n            <div className='col-sm-3 text-center'>\n              <img src={avatar_url} alt={name} style={{ width: '200px' }} />\n              <h1>{name}</h1>\n              {location && <p>Местоположение: {location}</p>}\n            </div>\n            <div className='col'>\n              {bio && (\n                <React.Fragment>\n                  <h3>Информация</h3>\n                  <p>{bio}</p>\n                </React.Fragment>\n              )}\n              <a\n                className='btn btn-dark'\n                href={html_url}\n                rel='noopener noreferrer'\n                target='_blank'\n              >\n                Открыть профиль\n              </a>\n              <ul\n                className='list-group'\n                style={{\n                  listStyle: 'none',\n                  margin: '5px 0',\n                }}\n              >\n                {login && (\n                  <li>\n                    <strong>Никнейм: </strong>\n                    {login}\n                  </li>\n                )}\n                {company && (\n                  <li>\n                    <strong>Компания: </strong>\n                    {company}\n                  </li>\n                )}\n                {blog && (\n                  <li>\n                    <strong>Сайт: </strong>\n                    {blog}\n                  </li>\n                )}\n              </ul>\n              <div className='badge badge-primary mr-1'>\n                Подписчики: {followers}\n              </div>\n              <div className='badge badge-success mr-1'>\n                Подписан: {following}\n              </div>\n              <div className='badge badge-info mr-1'>\n                Репозитории: {public_repos}\n              </div>\n              <div className='badge badge-dark'>Gists: {public_gists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Repos repos={repos} />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav className='navbar navbar-dark bg-primary navbar-expand-lg'>\n    <div className='navbar-brand'>Github Поиск</div>\n    <ul className='navbar-nav'>\n      <li className='nav-item'>\n        <NavLink className='nav-link' to='/github-app-vm-react/' exact>\n          Главная\n        </NavLink>\n      </li>\n      <li className='nav-item'>\n        <NavLink className='nav-link' to='/github-app-vm-react/about'>\n          Информация\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n","import React, { useContext } from 'react';\nimport { AlertContext } from '../context/alert/alertContext';\n\nexport const Alert = () => {\n  const { alert, hide } = useContext(AlertContext);\n\n  if (!alert) return null;\n\n  return (\n    <div\n      className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n      role='alert'\n    >\n      {alert.text}\n      <button className='close' onClick={hide} type='button' aria-label='Close'>\n        <span aria-hidden='true'>&times;</span>\n      </button>\n    </div>\n  );\n};\n","import {\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  CLEAR_USERS,\n  SET_LOADING,\n} from '../types';\n\nconst handlers = {\n  [GET_REPOS]: (state, { payload }) => ({\n    ...state,\n    repos: payload,\n    loading: false,\n  }),\n  [GET_USER]: (state, { payload }) => ({\n    ...state,\n    user: payload,\n    loading: false,\n  }),\n  [SEARCH_USERS]: (state, { payload }) => ({\n    ...state,\n    users: payload,\n    loading: false,\n  }),\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\n  DEFAULT: (state) => state,\n};\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n\n  return handler(state, action);\n};\n","export const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\nexport const GET_REPOS = 'GET_REPOS';\nexport const GET_USER = 'GET_USER';\nexport const SEARCH_USERS = 'SEARCH_USERS';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const SET_LOADING = 'SET_LOADING';\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { GithubContext } from './githubContext';\nimport { githubReducer } from './githubReducer';\nimport {\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  CLEAR_USERS,\n  SET_LOADING,\n} from '../types';\n\nexport const GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: [],\n  };\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const getRepos = async (name) => {\n    setLoading();\n\n    const response = await axios.get(\n      `https://api.github.com/users/${name}/repos?per_page=5&`\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data,\n    });\n  };\n\n  const getUser = async (name) => {\n    setLoading();\n\n    const response = await axios.get(`https://api.github.com/users/${name}?`);\n\n    dispatch({\n      type: GET_USER,\n      payload: response.data,\n    });\n  };\n\n  const search = async (value) => {\n    setLoading();\n\n    const response = await axios.get(\n      `https://api.github.com/search/users?q=${value}&`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items,\n    });\n  };\n\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  const { user, users, repos, loading } = state;\n\n  return (\n    <GithubContext.Provider\n      value={{\n        user,\n        users,\n        repos,\n        loading,\n        getRepos,\n        getUser,\n        search,\n        clearUsers,\n        setLoading,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n","import { SHOW_ALERT, HIDE_ALERT } from '../types';\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: (state) => state,\n};\n\nexport const alertReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n\n  return handler(state, action);\n};\n","import React, { useReducer } from 'react';\nimport { AlertContext } from './alertContext';\nimport { alertReducer } from './alertReducer';\nimport { SHOW_ALERT, HIDE_ALERT } from '../types';\n\nexport const AlertState = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, null);\n\n  const hide = () => dispatch({ type: HIDE_ALERT });\n\n  const show = (text, type = 'secondary') => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: { type, text },\n    });\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        hide,\n        show,\n        alert: state,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { About } from './pages/About';\nimport { Profile } from './pages/Profile';\nimport { Navbar } from './components/Navbar';\nimport { Alert } from './components/Alert';\nimport { GithubState } from './context/github/GithubState';\nimport { AlertState } from './context/alert/AlertState';\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className='container pt-4'>\n            <Alert />\n            <Switch>\n              <Route path='/github-app-vm-react/' exact component={Home} />\n              <Route path='/github-app-vm-react/about' component={About} />\n              <Route\n                path='/github-app-vm-react/profile/:name'\n                component={Profile}\n              />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}